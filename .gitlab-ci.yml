stages:
  - quality
  - test
  - documentation
  - deploy

image: python:3.8
before_script:
  - pip install tox

lint:
  stage: quality
  script:
    - tox -e lint

unittest:
  stage: test
  image: python:$IMAGE
  script:
    - tox -e $ENV
    - tox -e coverage-report
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/cobertura.xml
  parallel:
    matrix:
      - ENV: [py38]
        IMAGE_VER: [3.8]
      - ENV: [py39]
        IMAGE_VER: [3.9]
      - ENV: [py310]
        IMAGE_VER: [3.10]
      - ENV: [py311]
        IMAGE_VER: [3.11]
      - ENV: [py312]
        IMAGE_VER: [3.12]

docs:
  stage: documentation
  script:
    - tox -e docs

changelog:
  stage: documentation
  script:
    - tox -e changelog

description:
  stage: documentation
  script:
    - tox -e pypi-description

release:
  stage: deploy
  before_script:
    - pip install twine
  script:
    - python setup.py sdist bdist_wheel
    - python -m twine upload --verbose --skip-existing dist/*
  only:
    - main
    - tags

publish_docs:
  stage: deploy
  script:
    - tox -e docs
    - mv docs/_build/html html
    # - mv docs/_build/rinoh pdf
  artifacts:
    name: "docs-$CI_COMMIT_REF_NAME"
    paths:
      - html
      # - pdf/mlnext.pdf
  only:
    - main
    - tags

release-public-pypi:
  stage: deploy
  before_script:
    - pip install twine
  script:
    - python setup.py sdist bdist_wheel
    - >
      python
      -m twine upload
      --verbose
      --skip-existing
      --repository-url ${PYPI_REPOSITORY_URL}
      --cert ${PYPI_CERT}
      -u ${PYPI_USER}
      -p ${PYPI_TOKEN}
      dist/*
  only:
    - pypi-release
    - tags
